<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="gift.repository.ProductOptionRepositoryTest" tests="3" skipped="0" failures="0" errors="0" timestamp="2024-08-02T06:21:17" hostname="dogiheons-MacBook-Pro.local" time="0.45">
  <properties/>
  <testcase name="findByProductIdAndOptionId_존재O()" classname="gift.repository.ProductOptionRepositoryTest" time="0.385"/>
  <testcase name="findByProductIdAndOptionId_존재x()" classname="gift.repository.ProductOptionRepositoryTest" time="0.022"/>
  <testcase name="deleteByProductIdAndOptionId()" classname="gift.repository.ProductOptionRepositoryTest" time="0.04"/>
  <system-out><![CDATA[2024-08-02T15:21:17.206+09:00  INFO 54127 --- [spring-gift] [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [gift.repository.ProductOptionRepositoryTest]: ProductOptionRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-08-02T15:21:17.224+09:00  INFO 54127 --- [spring-gift] [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration gift.Application for test class gift.repository.ProductOptionRepositoryTest
Hibernate: insert into product (category_id,image_url,name,price,user_id,id) values (?,?,?,?,?,default)
Hibernate: insert into option (name,quantity,user_id,id) values (?,?,?,default)
Hibernate: insert into product_option (option_id,option_name,product_id,id) values (?,?,?,default)
Hibernate: select po1_0.id,po1_0.option_id,po1_0.option_name,po1_0.product_id from product_option po1_0 where po1_0.product_id=? and po1_0.option_id=?
Hibernate: insert into product (category_id,image_url,name,price,user_id,id) values (?,?,?,?,?,default)
Hibernate: insert into option (name,quantity,user_id,id) values (?,?,?,default)
Hibernate: insert into product_option (option_id,option_name,product_id,id) values (?,?,?,default)
Hibernate: select po1_0.id,po1_0.option_id,po1_0.option_name,po1_0.product_id from product_option po1_0 where po1_0.product_id=? and po1_0.option_id=?
Hibernate: insert into product (category_id,image_url,name,price,user_id,id) values (?,?,?,?,?,default)
Hibernate: insert into option (name,quantity,user_id,id) values (?,?,?,default)
Hibernate: insert into product_option (option_id,option_name,product_id,id) values (?,?,?,default)
Hibernate: delete from product_option po1_0 where po1_0.product_id=? and po1_0.option_id=?
Hibernate: select po1_0.id,po1_0.option_id,po1_0.option_name,po1_0.product_id from product_option po1_0 where po1_0.product_id=?
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
